name: cibuildwheel

on: push

# Verify that wheel build jobs succeed
jobs:
  build_linux_cibuildwheel:
    name: CIBW python ${{ matrix.cibw_python }} on on ${{matrix.arch}} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BEFORE_TEST: >
        pushd {project} &&
        pip install -r requirements/requirements.txt &&
        pip install -r requirements/requirements_test.txt &&
        git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata
      CIBW_TEST_COMMAND: >
        pushd {project} &&
        pytest tests/test_common --disable-warnings -x --hypothesis-profile ci --generate-plots
      CIBW_BUILD: ${{ matrix.cibw_python }}
      CIBW_SKIP: "*-manylinux_i686* *-musllinux*"
      CIBW_MANYLINUX_*_IMAGE: "manylinux2010 manylinux2014"
      CIBW_ARCHS_LINUX: ${{matrix.arch}}

    strategy:
      matrix:
        os: [ubuntu-latest]
        cibw_python: [cp36-*, cp39-*]
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: >
          python -m pip install pip -U &&
          python -m pip install wheel &&
          python -m pip install cibuildwheel

      - name: Set up QEMU
        if:  ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1

      - name: Build wheels and test
        run: |
          python -m cibuildwheel --output-dir wheelhouse
